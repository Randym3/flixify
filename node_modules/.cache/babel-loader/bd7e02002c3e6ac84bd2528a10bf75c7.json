{"ast":null,"code":"var _jsxFileName = \"/Users/Randy/Desktop/flixify/src/components/MovieCarousel.js\";\nimport React, { Component } from \"react\";\nimport Slider from \"react-slick\";\nimport axios from \"axios\";\nimport { Card } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport noImage from \"../noImage.png\";\nexport default class MovieCarousel extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getMovies = async () => {\n      const res = await axios.get(this.props.apiUrl);\n      const data = res.data.results;\n      this.setState({\n        playingMovies: data\n      });\n    };\n\n    this.state = {\n      playingMovies: []\n    };\n  }\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  render() {\n    var settings = {\n      infinite: false,\n      speed: 500,\n      slidesToShow: 5,\n      slidesToScroll: 5,\n      initialSlide: 1,\n      responsive: [{\n        breakpoint: 1300,\n        settings: {\n          slidesToShow: 4,\n          slidesToScroll: 4,\n          infinite: true,\n          dots: true\n        }\n      }, {\n        breakpoint: 1050,\n        settings: {\n          slidesToShow: 3,\n          slidesToScroll: 3,\n          infinite: true,\n          dots: true\n        }\n      }, {\n        breakpoint: 800,\n        settings: {\n          slidesToShow: 2,\n          slidesToScroll: 2,\n          initialSlide: 1\n        }\n      }, {\n        breakpoint: 600,\n        settings: {\n          slidesToShow: 1,\n          slidesToScroll: 1\n        }\n      }]\n    };\n    const playingMovies = this.state.playingMovies;\n    console.log(playingMovies);\n    return React.createElement(\"div\", {\n      className: \"p-2 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \" pt-1 text-white text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, this.props.title), React.createElement(Slider, Object.assign({}, settings, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), playingMovies.map(cur => {\n      return cur.backdrop_path ? React.createElement(Card, {\n        key: cur.id,\n        className: \"text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Card.Img, {\n        variant: \"top\",\n        src: cur.poster_path ? \"http://image.tmdb.org/t/p/original/\".concat(cur.poster_path) : noImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(Card.Title, {\n        className: \"pt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, cur.title ? cur.title : cur.name), React.createElement(\"hr\", {\n        className: \"mx-0\",\n        style: {\n          border: \"1px white solid\",\n          width: \"50px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), cur.vote_average > 0 ? React.createElement(Card.Text, {\n        class: \"my-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"TMDB Rating \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), React.createElement(\"i\", {\n        className: \"fas fa-star\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), \" \", \" \", cur.vote_average, \" / 10\") : React.createElement(Card.Text, {\n        class: \"my-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"No ratings \", React.createElement(\"i\", {\n        class: \"fas fa-frown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      })), this.props.type === \"movie\" ? React.createElement(Link, {\n        style: {\n          position: \"absolute\",\n          top: \"30%\",\n          left: \"25%\",\n          right: \"25%\"\n        },\n        className: \"btn btn-success\",\n        to: \"/details/\".concat(this.props.type, \"/\").concat(cur.id, \"/\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Get Details\") : React.createElement(Link, {\n        style: {\n          position: \"absolute\",\n          top: \"30%\",\n          left: \"25%\",\n          right: \"25%\"\n        },\n        className: \"btn btn-success\",\n        to: \"/tvdetails/\".concat(this.props.type, \"/\").concat(cur.id, \"/\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Get Details\")) : null;\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/Randy/Desktop/flixify/src/components/MovieCarousel.js"],"names":["React","Component","Slider","axios","Card","Link","noImage","MovieCarousel","constructor","props","getMovies","res","get","apiUrl","data","results","setState","playingMovies","state","componentDidMount","render","settings","infinite","speed","slidesToShow","slidesToScroll","initialSlide","responsive","breakpoint","dots","console","log","title","map","cur","backdrop_path","id","poster_path","name","border","width","vote_average","type","position","top","left","right"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Slider from \"react-slick\";\nimport axios from \"axios\";\nimport { Card } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nimport noImage from \"../noImage.png\";\n\nexport default class MovieCarousel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      playingMovies: []\n    };\n  }\n\n  getMovies = async () => {\n    const res = await axios.get(this.props.apiUrl);\n    const data = res.data.results;\n    this.setState({ playingMovies: data });\n  };\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  render() {\n    var settings = {\n      infinite: false,\n      speed: 500,\n      slidesToShow: 5,\n      slidesToScroll: 5,\n      initialSlide: 1,\n      responsive: [\n        {\n          breakpoint: 1300,\n          settings: {\n            slidesToShow: 4,\n            slidesToScroll: 4,\n            infinite: true,\n            dots: true\n          }\n        },\n        {\n          breakpoint: 1050,\n          settings: {\n            slidesToShow: 3,\n            slidesToScroll: 3,\n            infinite: true,\n            dots: true\n          }\n        },\n        {\n          breakpoint: 800,\n          settings: {\n            slidesToShow: 2,\n            slidesToScroll: 2,\n            initialSlide: 1\n          }\n        },\n        {\n          breakpoint: 600,\n          settings: {\n            slidesToShow: 1,\n            slidesToScroll: 1\n          }\n        }\n      ]\n    };\n    const { playingMovies } = this.state;\n    console.log(playingMovies);\n    return (\n      <div className=\"p-2 \">\n        <h1 className=\" pt-1 text-white text-center\">{this.props.title}</h1>\n        <Slider {...settings}>\n          {playingMovies.map(cur => {\n            return cur.backdrop_path ? (\n              <Card key={cur.id} className=\"text-white\">\n                <Card.Img\n                  variant=\"top\"\n                  src={\n                    cur.poster_path\n                      ? `http://image.tmdb.org/t/p/original/${cur.poster_path}`\n                      : noImage\n                  }\n                />\n\n                <Card.Title className=\"pt-3\">\n                  {cur.title ? cur.title : cur.name}\n                </Card.Title>\n                <hr\n                  className=\"mx-0\"\n                  style={{\n                    border: \"1px white solid\",\n                    width: \"50px\"\n                  }}\n                />\n\n                {cur.vote_average > 0 ? (\n                  <Card.Text class=\"my-3\">\n                    TMDB Rating <br />\n                    <i className=\"fas fa-star\" /> {` `}\n                    {cur.vote_average} / 10\n                  </Card.Text>\n                ) : (\n                  <Card.Text class=\"my-3\">\n                    No ratings <i class=\"fas fa-frown\" />\n                  </Card.Text>\n                )}\n\n                {this.props.type === \"movie\" ? (\n                  <Link\n                    style={{\n                      position: \"absolute\",\n                      top: \"30%\",\n                      left: \"25%\",\n                      right: \"25%\"\n                    }}\n                    className=\"btn btn-success\"\n                    to={`/details/${this.props.type}/${cur.id}/`}\n                  >\n                    Get Details\n                  </Link>\n                ) : (\n                  <Link\n                    style={{\n                      position: \"absolute\",\n                      top: \"30%\",\n                      left: \"25%\",\n                      right: \"25%\"\n                    }}\n                    className=\"btn btn-success\"\n                    to={`/tvdetails/${this.props.type}/${cur.id}/`}\n                  >\n                    Get Details\n                  </Link>\n                )}\n              </Card>\n            ) : null;\n          })}\n        </Slider>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}