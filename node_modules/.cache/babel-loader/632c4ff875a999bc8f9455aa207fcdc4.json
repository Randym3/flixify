{"ast":null,"code":"var _jsxFileName = \"/Users/Randy/Desktop/flixify/src/components/Details.js\";\nimport React, { Component } from \"react\";\nimport Slider from \"react-slick\";\nimport { Col, Row, ListGroup, ButtonToolbar, Button, Container, Card } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport YoutubeModal from \"./YoutubeModal\";\nimport CastList from \"./CastList\";\nimport { SliderSettings } from \"./MovieLists/SliderSettings\";\nconst apiKey = \"170638d59cd41f58852a2f12564d2503\";\nexport class Details extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getMovieDetails = async api => {\n      const _this$props$match$par = this.props.match.params,\n            id = _this$props$match$par.id,\n            type = _this$props$match$par.type;\n      const res = await axios.get(\"https://api.themoviedb.org/3/\".concat(type, \"/\").concat(id, \"?api_key=\").concat(api));\n      this.setState({\n        details: res.data,\n        genres: res.data.genres.map(cur => cur.name)\n      });\n    };\n\n    this.getMovieCast = async api => {\n      const _this$props$match$par2 = this.props.match.params,\n            id = _this$props$match$par2.id,\n            type = _this$props$match$par2.type;\n      const res = await axios.get(\"https://api.themoviedb.org/3/\".concat(type, \"/\").concat(id, \"/credits?api_key=\").concat(api));\n      this.setState({\n        cast: res.data.cast.slice(0, 5)\n      });\n    };\n\n    this.getMovieTrailer = async api => {\n      const _this$props$match$par3 = this.props.match.params,\n            id = _this$props$match$par3.id,\n            type = _this$props$match$par3.type;\n      const res = await axios.get(\"https://api.themoviedb.org/3/\".concat(type, \"/\").concat(id, \"/videos?api_key=\").concat(apiKey, \"&language=en-US\"));\n      this.setState({\n        trailer: res.data.results[0].key\n      });\n    };\n\n    this.getSimilar = async api => {\n      const _this$props$match$par4 = this.props.match.params,\n            id = _this$props$match$par4.id,\n            type = _this$props$match$par4.type;\n      const res = await axios.get(\"https://api.themoviedb.org/3/\".concat(type, \"/\").concat(id, \"/similar?api_key=\").concat(api, \"&language=en-US&page=1\"));\n      this.setState({\n        similar: res.data.results\n      });\n    };\n\n    this.modalClose = () => {\n      this.setState({\n        modalShow: false\n      });\n    };\n\n    this.state = {\n      details: {},\n      similar: [],\n      genres: [],\n      trailer: \"\",\n      cast: [],\n      modalShow: false\n    };\n  }\n\n  componentDidMount() {\n    this.getMovieDetails(apiKey);\n    this.getMovieTrailer(apiKey);\n    this.getMovieCast(apiKey);\n    this.getSimilar(apiKey);\n  }\n\n  render() {\n    const _this$state = this.state,\n          details = _this$state.details,\n          trailer = _this$state.trailer,\n          genres = _this$state.genres,\n          modalShow = _this$state.modalShow,\n          cast = _this$state.cast,\n          similar = _this$state.similar;\n    const fullYear = String(details.release_date).slice(0, 4);\n    console.log(this.state);\n    return React.createElement(\"div\", {\n      className: \"banner-gradient-details  text-light \",\n      style: {\n        backgroundImage: \"linear-gradient(rgba(0,0,53,0.7),rgba(0,0,53,0.7)),url(http://image.tmdb.org/t/p/original/\".concat(details.backdrop_path, \")\")\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"  align-items-center justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Col, {\n      className: \"text-center py-4\",\n      md: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \" \", React.createElement(\"img\", {\n      className: \"rounded\",\n      alt: \"\",\n      width: \"225\",\n      src: \"http://image.tmdb.org/t/p/original/\".concat(details.poster_path),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    })), React.createElement(Col, {\n      className: \"py-4\",\n      lg: 8,\n      xs: 11,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, details.title, \" \", React.createElement(\"span\", {\n      className: \"text-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"(\", fullYear, \")\")), genres.map((cur, i) => React.createElement(ListGroup.Item, {\n      key: i,\n      className: \"d-inline-block  p-2 m-2 rounded\",\n      variant: \"warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, cur)), React.createElement(ButtonToolbar, {\n      className: \"d-inline-block m-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"warning\",\n      onClick: () => this.setState({\n        modalShow: true\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-play-circle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), \" Trailer\"), React.createElement(YoutubeModal, {\n      show: modalShow,\n      onHide: this.modalClose,\n      trailer: trailer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    })), React.createElement(\"hr\", {\n      className: \"mx-0\",\n      style: {\n        border: \"1px white solid\",\n        width: \"250px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"p-2 bg-light text-dark rounded\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, details.overview))), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Top Cast\"), React.createElement(CastList, {\n      cast: cast,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), React.createElement(Slider, Object.assign({}, SliderSettings, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }), similar.map(cur => {\n      return cur.backdrop_path ? React.createElement(Card, {\n        key: cur.id,\n        className: \"text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(Card.Img, {\n        variant: \"top\",\n        src: \"http://image.tmdb.org/t/p/original/\".concat(cur.poster_path),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }), this.props.type === \"movie\" ? React.createElement(Link, {\n        to: \"/details/\".concat(this.props.type, \"/\").concat(cur.id, \"/\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(Button, {\n        style: {\n          position: \"absolute\",\n          top: \"35%\",\n          left: \"27%\"\n        },\n        variant: \"success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"Get Details\")) : React.createElement(Link, {\n        to: \"/tvdetails/\".concat(this.props.type, \"/\").concat(cur.id, \"/\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(Button, {\n        style: {\n          position: \"absolute\",\n          top: \"35%\",\n          left: \"27%\"\n        },\n        variant: \"success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"Get Details\")), React.createElement(Card.Title, {\n        className: \"pt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, cur.title ? cur.title : cur.name), React.createElement(\"hr\", {\n        className: \"mx-0\",\n        style: {\n          border: \"1px white solid\",\n          width: \"50px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }), React.createElement(Card.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, \"TMDB Rating \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }), React.createElement(\"i\", {\n        className: \"fas fa-star\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }), \" \", \" \", cur.vote_average, \" / 10\")) : null;\n    }))));\n  }\n\n}\nexport default Details;","map":{"version":3,"sources":["/Users/Randy/Desktop/flixify/src/components/Details.js"],"names":["React","Component","Slider","Col","Row","ListGroup","ButtonToolbar","Button","Container","Card","Link","axios","YoutubeModal","CastList","SliderSettings","apiKey","Details","constructor","props","getMovieDetails","api","match","params","id","type","res","get","setState","details","data","genres","map","cur","name","getMovieCast","cast","slice","getMovieTrailer","trailer","results","key","getSimilar","similar","modalClose","modalShow","state","componentDidMount","render","fullYear","String","release_date","console","log","backgroundImage","backdrop_path","poster_path","title","i","border","width","overview","position","top","left","vote_average"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Slider from \"react-slick\";\n\nimport {\n  Col,\n  Row,\n  ListGroup,\n  ButtonToolbar,\n  Button,\n  Container,\n  Card\n} from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport YoutubeModal from \"./YoutubeModal\";\nimport CastList from \"./CastList\";\nimport { SliderSettings } from \"./MovieLists/SliderSettings\";\n\nconst apiKey = \"170638d59cd41f58852a2f12564d2503\";\nexport class Details extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      details: {},\n      similar: [],\n      genres: [],\n      trailer: \"\",\n      cast: [],\n      modalShow: false\n    };\n  }\n\n  getMovieDetails = async api => {\n    const { id, type } = this.props.match.params;\n    const res = await axios.get(\n      `https://api.themoviedb.org/3/${type}/${id}?api_key=${api}`\n    );\n\n    this.setState({\n      details: res.data,\n      genres: res.data.genres.map(cur => cur.name)\n    });\n  };\n  getMovieCast = async api => {\n    const { id, type } = this.props.match.params;\n    const res = await axios.get(\n      `https://api.themoviedb.org/3/${type}/${id}/credits?api_key=${api}`\n    );\n    this.setState({ cast: res.data.cast.slice(0, 5) });\n  };\n  getMovieTrailer = async api => {\n    const { id, type } = this.props.match.params;\n    const res = await axios.get(\n      `https://api.themoviedb.org/3/${type}/${id}/videos?api_key=${apiKey}&language=en-US`\n    );\n    this.setState({ trailer: res.data.results[0].key });\n  };\n\n  getSimilar = async api => {\n    const { id, type } = this.props.match.params;\n    const res = await axios.get(\n      `https://api.themoviedb.org/3/${type}/${id}/similar?api_key=${api}&language=en-US&page=1`\n    );\n\n    this.setState({\n      similar: res.data.results\n    });\n  };\n\n  modalClose = () => {\n    this.setState({ modalShow: false });\n  };\n\n  componentDidMount() {\n    this.getMovieDetails(apiKey);\n    this.getMovieTrailer(apiKey);\n    this.getMovieCast(apiKey);\n    this.getSimilar(apiKey);\n  }\n  render() {\n    const { details, trailer, genres, modalShow, cast, similar } = this.state;\n    const fullYear = String(details.release_date).slice(0, 4);\n    console.log(this.state);\n\n    return (\n      <div\n        className=\"banner-gradient-details  text-light \"\n        style={{\n          backgroundImage: `linear-gradient(rgba(0,0,53,0.7),rgba(0,0,53,0.7)),url(http://image.tmdb.org/t/p/original/${\n            details.backdrop_path\n          })`\n        }}\n      >\n        <Container>\n          <Row className=\"  align-items-center justify-content-center\">\n            <Col className=\"text-center py-4\" md={3}>\n              {\" \"}\n              <img\n                className=\"rounded\"\n                alt=\"\"\n                width=\"225\"\n                src={`http://image.tmdb.org/t/p/original/${\n                  details.poster_path\n                }`}\n              />\n            </Col>\n            <Col className=\"py-4\" lg={8} xs={11}>\n              <h1>\n                {details.title}{\" \"}\n                <span className=\"text-warning\">({fullYear})</span>\n              </h1>\n\n              {genres.map((cur, i) => (\n                <ListGroup.Item\n                  key={i}\n                  className=\"d-inline-block  p-2 m-2 rounded\"\n                  variant=\"warning\"\n                >\n                  {cur}\n                </ListGroup.Item>\n              ))}\n              <ButtonToolbar className=\"d-inline-block m-1\">\n                <Button\n                  variant=\"warning\"\n                  onClick={() => this.setState({ modalShow: true })}\n                >\n                  <i className=\"fas fa-play-circle\" /> Trailer\n                </Button>\n\n                <YoutubeModal\n                  show={modalShow}\n                  onHide={this.modalClose}\n                  trailer={trailer}\n                />\n              </ButtonToolbar>\n\n              <hr\n                className=\"mx-0\"\n                style={{\n                  border: \"1px white solid\",\n                  width: \"250px\"\n                }}\n              />\n              <p className=\"p-2 bg-light text-dark rounded\">\n                {details.overview}\n              </p>\n            </Col>\n          </Row>\n          <h1>Top Cast</h1>\n          <CastList cast={cast} />\n          <Slider {...SliderSettings}>\n            {similar.map(cur => {\n              return cur.backdrop_path ? (\n                <Card key={cur.id} className=\"text-white\">\n                  <Card.Img\n                    variant=\"top\"\n                    src={`http://image.tmdb.org/t/p/original/${\n                      cur.poster_path\n                    }`}\n                  />\n\n                  {this.props.type === \"movie\" ? (\n                    <Link to={`/details/${this.props.type}/${cur.id}/`}>\n                      <Button\n                        style={{\n                          position: \"absolute\",\n                          top: \"35%\",\n                          left: \"27%\"\n                        }}\n                        variant=\"success\"\n                      >\n                        Get Details\n                      </Button>\n                    </Link>\n                  ) : (\n                    <Link to={`/tvdetails/${this.props.type}/${cur.id}/`}>\n                      <Button\n                        style={{\n                          position: \"absolute\",\n                          top: \"35%\",\n                          left: \"27%\"\n                        }}\n                        variant=\"success\"\n                      >\n                        Get Details\n                      </Button>\n                    </Link>\n                  )}\n\n                  <Card.Title className=\"pt-3\">\n                    {cur.title ? cur.title : cur.name}\n                  </Card.Title>\n                  <hr\n                    className=\"mx-0\"\n                    style={{\n                      border: \"1px white solid\",\n                      width: \"50px\"\n                    }}\n                  />\n                  <Card.Text>\n                    TMDB Rating <br />\n                    <i className=\"fas fa-star\" /> {` `}\n                    {cur.vote_average} / 10\n                  </Card.Text>\n                </Card>\n              ) : null;\n            })}\n          </Slider>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Details;\n"]},"metadata":{},"sourceType":"module"}